// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MinimalAPI_Book.Data;

#nullable disable

namespace MinimalAPI_Book.Migrations
{
    [DbContext(typeof(BookDbContext))]
    partial class BookDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MinimalAPI_Book.Models.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBorrowed")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ReturnedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("68da34b5-c6e4-47c8-8f21-87a82b0f8245"),
                            Author = "Sara Johnson",
                            Created = new DateTime(2023, 9, 7, 14, 0, 19, 252, DateTimeKind.Utc).AddTicks(236),
                            DateOfBorrowed = new DateTime(2023, 8, 28, 14, 0, 19, 252, DateTimeKind.Utc).AddTicks(237),
                            Description = "En romantisk berättelse om kärlek och relationer.",
                            Genre = "Romance",
                            IsAvailable = false,
                            ReturnedDate = new DateTime(2023, 9, 2, 14, 0, 19, 252, DateTimeKind.Utc).AddTicks(240),
                            Title = "Love Story"
                        },
                        new
                        {
                            Id = new Guid("45063f3c-aa51-4fb8-a9e3-56f8eec57778"),
                            Author = "Mikael Svensson",
                            Created = new DateTime(2023, 9, 7, 14, 0, 19, 252, DateTimeKind.Utc).AddTicks(241),
                            Description = "En science fiction-berättelse som utforskar framtiden.",
                            Genre = "Science Fiction",
                            IsAvailable = true,
                            Title = "Science Fiction World"
                        },
                        new
                        {
                            Id = new Guid("771e64e1-7a2e-4abc-85bc-a0f3facc05f0"),
                            Author = "Laura Smith",
                            Created = new DateTime(2023, 9, 7, 14, 0, 19, 252, DateTimeKind.Utc).AddTicks(243),
                            Description = "En spännande mysteriebok med gåtor att lösa.",
                            Genre = "Mystery",
                            IsAvailable = true,
                            Title = "The Mystery Book"
                        },
                        new
                        {
                            Id = new Guid("26bde574-b8d7-40d8-92f3-3d316d59bc66"),
                            Author = "John Adams",
                            Created = new DateTime(2023, 9, 7, 14, 0, 19, 252, DateTimeKind.Utc).AddTicks(244),
                            DateOfBorrowed = new DateTime(2023, 8, 23, 14, 0, 19, 252, DateTimeKind.Utc).AddTicks(244),
                            Description = "En episk historisk roman som tar dig till en annan tid.",
                            Genre = "Historical Fiction",
                            IsAvailable = false,
                            ReturnedDate = new DateTime(2023, 8, 30, 14, 0, 19, 252, DateTimeKind.Utc).AddTicks(245),
                            Title = "Historical Fiction Saga"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
